---
- name: config_phpipam | downloading phpipam {{ phpipam_version }}
  get_url:
    url: "{{ phpipam_download }}"
    dest: "/opt/{{ phpipam_download_file }}"
  when: not phpipam_install_from_git

- name: config_phpipam | extracting phpipam package to {{ web_root }}
  unarchive:
    src: "/opt/{{ phpipam_download_file }}"
    dest: "{{ web_root }}"
    copy: no
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    creates: "{{ phpipam_root }}-{{ phpipam_version }}/config.php"
  when: not phpipam_install_from_git
  register: extract_phpipam

- name: create link to {{ phpipam_root }}-{{ phpipam_version }} on {{ web_root }}
  file:
    state: link
    src: "{{ phpipam_root }}-{{ phpipam_version }}"
    path: "{{ phpipam_root }}"
    force: yes
  when: extract_phpipam.changed

- name: config_phpipam | installing phpIPAM from git
  git:
    repo: "https://github.com/phpipam/phpipam.git"
    dest: "{{ phpipam_root }}"
    version: "{{ phpipam_install_git_version|default ('HEAD') }}"
    depth: 1 # Shallow clone
  when: phpipam_install_from_git

- name: config_phpipam | creating phpipam web config
  template:
    src: "config.php-{{ phpipam_version }}.j2"
    dest: "{{ phpipam_root }}/config.php"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    backup: yes

- name: config_phpipam | configuring .htacess
  template:
    src: "htaccess.j2"
    dest: "{{ phpipam_root }}/.htaccess"
    owner: root
    group: root
    backup: yes

- name: config_phpipam | creating phpipam db
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: present
  when: >
        phpipam_pre_load_db and
        not phpipam_db_cluster

- name: config_phpipam | creating phpipam db
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: present
  when: >
        phpipam_pre_load_db and
        phpipam_db_cluster and
        (inventory_hostname == phpipam_primary)

- name: config_phpipam | creating phpipam db user
  mysql_user:
    name: "{{ phpipam_db_user }}"
    password: "{{ phpipam_db_pass }}"
    priv: "{{ phpipam_db_name }}.*:ALL"
    state: present
  when: >
        not phpipam_db_cluster

- name: config_phpipam | creating phpipam db user
  mysql_user:
    name: "{{ phpipam_db_user }}"
    password: "{{ phpipam_db_pass }}"
    priv: "{{ phpipam_db_name }}.*:ALL"
    state: present
  when: >
        phpipam_db_cluster and
        (inventory_hostname == phpipam_primary)

- name: Checking If DB Tables Exist
  command: >
           mysql
           -u {{ phpipam_db_user }}
           --password={{ phpipam_db_pass }}
           -h {{ phpipam_db_host }}
           -e "show tables from {{ phpipam_db_name }};"
  register: "phpipam_tables"
  changed_when: false

- name: config_phpipam | importing phpipam database
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: import
    target: "{{ phpipam_root }}/db/SCHEMA.sql"
  when: >
        phpipam_pre_load_db and
        ('ipaddresses' not in phpipam_tables.stdout_lines) and
        not phpipam_db_cluster

- name: config_phpipam | importing phpipam database
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: import
    # target: "/tmp/phpipam_schema.sql"
    target: "{{ phpipam_root }}/db/SCHEMA.sql"
  when: >
        phpipam_pre_load_db and
        ('ipaddresses' not in phpipam_tables.stdout_lines) and
        phpipam_db_cluster and
        (inventory_hostname == phpipam_primary)

# need to validate this is still needed as versions change
- name: config_phpipam | patching functions-network.php
  template:
    src: "functions/functions-network.php.j2"
    dest: "{{ phpipam_root }}/functions/functions-network.php"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
  when: >
        phpipam_patch_discovery is defined and
        phpipam_patch_discovery

# need to validate this is still needed as versions change
- name: config_phpipam | patching email
  template:
    src: "functions/functions-mail.php.j2"
    dest: "{{ phpipam_root }}/functions/functions-mail.php"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
  when: >
        phpipam_patch_email is defined and
        phpipam_patch_email

# need to validate this is still needed as versions change
- name: config_phpipam | patching email
  template:
    src: "site/admin/mailSettingsTestMail.php.j2"
    dest: "{{ phpipam_root }}/site/admin/mailSettingsTestMail.php"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
  when: >
        phpipam_patch_email is defined and
        phpipam_patch_email

# need to validate this is still needed as versions change
- name: config_phpipam | adding dnsCheck.php script
  template:
    src: "functions/scripts/dnsCheck.php.j2"
    dest: "{{ phpipam_root }}/functions/scripts/dnsCheck.php"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    mode: 0755
  when: >
        phpipam_patch_discovery is defined and
        phpipam_patch_discovery

# need to validate this is still needed as versions change
- name: config_phpipam | checking for fping path
  command: which fping
  register: fping_path
  always_run: true  #allows checks and diffs to pass
  changed_when: false

# need to validate this is still needed as versions change
- name: config_phpipam | adding fpingDiscovery script(s)
  template:
    src: "functions/scripts/{{ item }}.j2"
    dest: "{{ phpipam_root }}/functions/scripts/{{ item }}"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    mode: 0755
  with_items:
    - fpingDiscoveryCheck.php
    - fpingThread.php
  when: >
        phpipam_patch_discovery is defined and
        phpipam_patch_discovery

- name: config_phpipam | Ensuring Permissions Are Correctly Set
  file:
    path: "{{ phpipam_root }}"
    group: "{{ web_group }}"
    owner: "{{ web_owner }}"
    state: "directory"
    recurse: yes
  when: phpipam_install_from_git # Only run when is not coming from git

- name: config_phpipam | Ensuring Permissions Are Correctly Set
  file:
    path: "{{ phpipam_root }}-{{ phpipam_version }}"
    group: "{{ web_group }}"
    owner: "{{ web_owner }}"
    state: "directory"
    recurse: yes
  when: extract_phpipam.changed and not phpipam_install_from_git # Only run if some version change was done.
